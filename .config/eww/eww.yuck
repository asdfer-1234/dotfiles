(defpoll volume :interval "1s" `./volume.sh`)
(defpoll daytype :interval "1s" "date +%d")
(defpoll day :interval "1s" "date +%a")
(defpoll hour :interval "1s" "date +%H")
(defpoll min :interval "1s" "date +%M")
(defpoll indiahour :interval "1s" "env TZ=Asia/Kolkata date +%H")
(defpoll indiamin :interval "1s" "env TZ=Asia/Kolkata date +%M")
(defpoll europehour :interval "1s" "env TZ=Europe/Berlin date +%H")
(defpoll batteryicon :interval "1s" `./batteryicon.sh`)
(defpoll battery :interval "10s" `./battery.sh`)
(defpoll batterystatus :interval "10s" `./batterystatus.sh`)
(defvar workspaces "")

(defwidget status-block[icon value ?text-class ?reveal]
	(revealer :transition "slideup" :reveal reveal :duration "200ms"
		(box :orientation "vertical" :space-evenly false :spacing 0
			(box :orientation "vertical" :space-evenly false :spacing 0 :class "status-block"
				(label :halign "center" :text icon :class text-class)
				(label :halign "center" :text {round(value, 0)} :class text-class))
			(progress :value value :orientation "h" :class text-class))))

(defwidget time[]
	(box :orientation "vertical" :spacing 4 :space-evenly false
		(box :class "block"
			(box :orientation "vertical" :class "date"
				(label :text daytype)
				(label :text day)))
		(box :class "block"
			(box :orientation "vertical" :class "time"
				(label :text hour)
				(label :text min)))
		(box :class "secondary-block"
			(box :orientation "vertical" :class "time"
				(label :text indiahour)
				(label :text indiamin)))
		(box :class "secondary-block"
			(box :orientation "vertical" :class "time"
				(label :text europehour)
				(label :text min)))))

(defwidget workspace[name status]
	(button
		:class {status == "focused" ? "focused" : "workspace"}
		:onclick {"wmctrl -s " + (name - 1) + " ; eww update workspaces=$(./workspaces.sh)"}
		:visible {status != "inactive"}
		:hexpand false
		:vexpand false
		name))

(defwidget workspaces[]
	(literal :content workspaces))

(defwidget status_layout[]
	(centerbox :orientation "vertical"
		(workspaces :valign "start")
		(time)
		(box :orientation "vertical" :spacing 4 :valign "end" :space-evenly false
			(status-block :icon "ï€¨" :value volume :reveal {volume != ""} :text-class "volume")
			(status-block :class "status-battery" :icon batteryicon :value battery :reveal {batterystatus != "Full"} :text-class "battery")
			(status-block :icon "RAM" :value {EWW_RAM.used_mem_perc} :reveal true :text-class "resource")
			(status-block :icon "CPU" :value {EWW_CPU.avg} :reveal true :text-class "resource"))))
(defwindow status
	:monitor 0
	:windowtype "dock"
	:geometry (geometry
		:y 0
		:x 0
		:height "100%")
	:reserve (struts :distance "39" :side "left")
	:stacking "bg"
	(status_layout))


